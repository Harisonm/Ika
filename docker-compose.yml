version: '3.7'

services:
  ika_classifier:
    build: ./ika_classifier
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000 --workers 16
    volumes:
      - ./ika_classifier/:/app/
    ports:
      - 8004:8000
    environment:
      - MONGO_URI=ika_db:27017
      - PATH_FILE=temp/
      - HOME_URI=/home
      - GOOGLE_GMAIL_URI=https://mail.google.com/mail/u/0/#inbox
      - ENV=localhost
    depends_on:
      - ika_db

  ika_streamer:
    build: ./ika_streamer
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000 --workers 16
    volumes:
      - ./ika_streamer/:/app/
    ports:
      - 8002:8000
    environment:
      - MONGO_URI=ika_db:27017
      - KAFKA_URI_1=kafka1:9091
      - KAFKA_URI_2=kafka2:9092
      - KAFKA_URI_3=kafka3:9093
    depends_on:
      - ika_db
      - kafka1
      - kafka2
      - kafka3
      - zookeeper

  ika_web:
    build: ./ika_web
    volumes:
      - ./ika_web/:/ika_web/
    ports:
      - "8000:8000"
    environment:
      - FN_AUTH_REDIRECT_URI=http://127.0.0.1:8000/google/auth
      - FN_BASE_URI=http://127.0.0.1:8000
      - MONGO_URI=ika_db:27017
      - PORT_APP=8000
      - OAUTHLIB_INSECURE_TRANSPORT=1
      - FLASK_APP=app/app.py
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - CLIENT_SECRET=resources/client_secret_localhost.json
      - PATH_FILE=temp/
      - HOME_URI=/home
      - ENV_FILE_LOCATION=./.env
    command: python -m flask run -p 8000 --host=0.0.0.0
    depends_on:
      - ika_db

  smtpd:
    build:
      context: ./smtpd
      dockerfile: Dockerfile
    ports:
     - "1025:1025"
    command: python -m smtpd -n -c DebuggingServer localhost:1025 

  ika_db:
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    image : mongo:latest
    ports :
        - "27017:27017"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - ika_streamer
      - ika_web

  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://kafka1:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
  kafka2:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://kafka2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
    volumes:
      - ./data/kafka2/data:/var/lib/kafka/data
    depends_on:
      - zookeeper 
  kafka3:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka3
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://kafka3:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka3/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
      - kafka2
      - kafka3